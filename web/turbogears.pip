<pipp>
<title>TurboGears</title>
<desc>This page lists the major components used by different versions of TurboGears and assesses their fitness for a production-quality release.</desc>
<body>


<style>
.g, .g a { color: green }
.a, .a a { color: orange }
.r, .r a { color: red }
.u, .u a { color: gray }
.maintbl th { text-align: left; }
.maintbl td { vertical-align: top; width: 170px; }
</style>

<h2>Development Status</h2>

<p>This page attempts to document the current (December 2007) state of development of TurboGears. Hover over component names to see a longer description. Select a TurboGears version to see what TG uses for each component (JavaScript is required). The components are colour coded based on stability. Hover over non-green components to see why they're not green.</p>

<p><input type="radio" name="grp" checked="on" onclick="paj('tg', 'none')"/> None &#160; &#160; &#160;
<input type="radio" name="grp" onclick="paj('tg', 'none'); paj('tg10', '')"/> 1.0 &#160; &#160; &#160;
<input type="radio" name="grp" onclick="paj('tg', 'none'); paj('tg11', '')"/> 1.1 &#160; &#160; &#160;
<input type="radio" name="grp" onclick="paj('tg', 'none'); paj('tg20', '')"/> 2.0</p>


<table class="maintbl">
<tr>
<th>Model</th><th>View</th><th>Controller</th><th>Widgets</th><th>Admin</th><th>Other</th>
</tr>
<tr>
<td>
<span title="A layer to provide consistent semantics across a range of database products. DBAPI does some of the work, but not all. Often this is included in an object-relational mapper, although standalone solutions exist, such as ADODB.">Database Portability</span><br/>
<span class="tg10 g"><a href="http://www.sqlobject.org/">SQLObject</a> [1]</span>
<span class="tg11 tg20 g"><a href="http://www.sqlalchemy.org/">SQLAlchemy</a> [1]</span><br/>
<span title="An object-relational mapper provides persistence to Python objects, using a relation database for storage.">ORM</span><br/>
<span class="tg10 g"><a href="http://www.sqlobject.org/">SQLObject</a> [1]</span>
<span class="tg11 tg20 g"><a href="http://www.sqlalchemy.org/">SQLAlchemy</a> [1]</span><br/>
<span title="A layer to provide convenient definition of database tables and Python classes, for use with an ORM">Active Record</span><br/>
<span class="tg10 g"><a href="http://www.sqlobject.org/">SQLObject</a> [1]</span>
<span class="tg11 tg20 g" title="Need some documentation on using it with TurboGears."><a redirect="1" href="http://elixir.ematia.de/">Elixir</a> [1]</span><br/>
<span title="A utility to assist with management of a database to be used with an ORM, performing functions such as schema updates and data migration.">Database Admin</span><br/>
<span class="tg10 g"><a href="http://www.sqlobject.org/">SQLObject</a></span>
<span class="tg11 tg20 a" title="tg-admin now has reasonable sql functionalities for SQLAlchemy, but this needs beta testing.">TG Core [1]</span><br/>
<span title="Functionality necessary to correctly integrate the controller with the ORM. Main task is to connect to the database specified in the config. Also performs features such as wrapping requests in transactions.">Controller Integration</span><br/>
<span class="tg10 g">TG Core</span>
<span class="tg11 a" title="Main need is to support SQLAlchemy 0.4. Some concerns remain over design.">TG Core</span>
<span class="tg20 r" title="Transactional middleware is needed, probably a new project usable in any WSGI environment">N/A</span><br/>
</td>
<td>
<span title="A template language processor to support conventient generation of HTML and other output formats.">Template Engine</span><br/>
<span class="tg10 g"><a href="http://kid-templating.org/">Kid</a> [2]</span>
<span class="tg11 tg20 g"><a href="http://genshi.edgewall.org/">Genshi</a> [2]</span><br/>
<span title="Functionality necessary to correctly integrate the template engine with the controller. This may be built-in to the template engine, or may require a separate component.">Controller Integration</span><br/>
<span class="tg10 g"><a href="http://trac.turbogears.org/browser/projects/TurboKid">TurboKid</a> [2]</span>
<span class="tg11 tg20 g"><a href="http://genshi.edgewall.org/">Genshi</a> [2]</span><br/>
<span title="Functions exposed to the template to assist in their work. TurboGears has not really explored this; by contrast Django has a number of these, call Django Filters">Helper functions</span><br/>
<span class="tg10 tg20 tg11 g">N/A [7]</span><br/>
<span title="Automatically create JSON from Python objects; used primarily for Ajax callbacks">JSON Serialiser</span><br/>
<span class="tg10 tg20 tg11 g"><a href="http://trac.turbogears.org/browser/projects/TurboJson">TurboJson</a></span><br/>
<span title="A library of helper functions to make JavaScript programming more convenient.">JavaScript Library</span><br/>
<span class="tg10 tg20 tg11 a" title="Concerns about the version of MochiKit to use, and that it is difficult for users to select the version"><a href="http://mochikit.com/">MochiKit</a> [4]</span><br/>
<span title="TBD">Internationalisation</span><br/>
<span class="tg10 tg20 tg11 u">TG Core</span><br/>
</td>
<td>
<span title="Simple web server built-in to framework for development and reverse proxy deployments.">Web server</span><br/>
<span class="tg10 tg11 g"><a href="http://www.cherrypy.org/">CherryPy</a></span>
<span class="tg20 g"><a href="http://pythonpaste.org/">Paste</a> [6]</span><br/>
<span title="Dispatch of web requests to handlers in application code. This also includes the interface provided to application code for working with the request, e.g. processing cookies or determining the remote IP address.">Request Dispatch</span><br/>
<span class="tg10 tg11 g"><a href="http://www.cherrypy.org/">CherryPy</a></span>
<span class="tg20 a" title="Emulates the CherryPy dispatch from earlier TG versions.">CP Style [5]</span><br/>
<span title="Store data server side that is associated with a user.">Session Handling</span><br/>
<span class="tg10 tg11 g"><a href="http://www.cherrypy.org/">CherryPy</a></span>
<span class="tg20 g"><a href="http://beaker.groovie.org/">Beaker</a></span><br/>
<span title="Securely identify a remote user.">Authentication</span><br/>
<span class="tg10 tg11 g">TG Core (Identity)</span>
<span class="tg20 a" title="Work needed to keep compatibility with identity. Also, AuthKit itself needs some attention. Need glue to initialise database tables, lookup users, etc."><a href="http://authkit.org/">AuthKit</a></span><br/>
<span title="Determine if an authenticated user is allowed to access a resource.">Authorization</span><br/>
<span class="tg10 tg11 g">TG Core (Identity)</span>
<span class="tg20 r" title="Could be AuthKit or TurboPeakSecurity, or something completely new">TBD</span><br/>
<span title="Long-lived connections used to signal events from server to client.">Comet</span><br/>
<span class="tg10 tg11 tg20 a" title="Usable, but still alpha, and a separate process is required."><a href="http://orbited.org/">Orbited</a></span>
</td>
<td>
<span title="Process incoming form data into Python format, conducting validation checks and producing user-friendly error messages.">Validation</span><br/>
<span class="tg10 tg11 tg20 g"><a href="http://formencode.org/">FormEncode</a></span><br/>
<span title="Functionality to create stuctured bundles of template and controller code with JS and CSS resources.">Widgets Framework</span><br/>
<span class="tg10 tg11 g">TG Core (Widgets) [3]</span>
<span class="tg20 r" title="ToscaWidgets needs documentation! And integration with TG"><a href="http://toscawidgets.org/">ToscaWidgets</a> [3]</span><br/>
<span title="A set of commonly used widgets for constructing forms.">Forms Library</span><br/>
<span class="tg10 tg11 g">TG Core (Widgets) [3]</span>
<span class="tg20 r" title="ToscaWidgets needs documentation!">ToscaWidgetsForms [3]</span><br/>
<span title="Convenience functions to automatically construct widget forms from a database model.">Automatic Forms</span><br/>
<span class="tg10 tg11 tg20 a" title="FastData is not actively maintained and could be rated red. However, as a non-critical component, Amber is felt appropriate"><a href="http://svn.turbogears.org/projects/FastData2/">FastData</a></span><br/>
<span title="One-time scripts to automatically generate HTML forms from a database model, intended for later human editing">HTML Generation</span><br/>
<span class="tg10 tg11 tg20 u"><a href="http://docs.turbogears.org/1.0/CRUDTemplate">tgcrud</a></span><br/>
</td>
<td>
<span title="Interface for general project management (e.g. debug console) and interfaces to other admin components (e.g. database admin)">Command Line Tool</span><br/>
<span class="tg10 tg11 g">TG Core</span>
<span class="tg20 r" title="Design unclear at present"><a href="http://pythonpaste.org/">Paste</a></span><br/>
<span title="Higher-level interface, providing convenient interfaces to manage aspects of the project such as model definitions and data">Web Interface</span><br/>
<span class="tg10 g">TG Core (Toolbox)</span>
<span class="tg11 a" title="CatWalk and ModelDesigner don't work with SQLAlchemy">TG Core (Toolbox)</span>
<span class="tg20 a" title="Probably a new standalone project">N/A</span><br/>
<span title="Tool to automatically create a blank shell for a project">Project Creation</span><br/>
<span class="tg10 g">TG Core (Quickstart)</span>
<span class="tg11 g">TG Core (Quickstart)</span>
<span class="tg20 a" title="Becomes a standalone project. Concerns about scalability as the number of possible combinations grows - kid/genshi, so/sa/elixir">Quickstart</span><br/>
<span title="Framework to store and access configuration details in development and production.">Configuration</span><br/>
<span class="tg10 tg11 g"><a href="http://www.cherrypy.org/">CherryPy</a></span>
<span class="tg20 u">Pylons</span><br/>
<span title="Tools to assist with deployment of the web application.">Deployment</span><br/>
<span class="tg10 tg11 g" title="TurboGears doesn't have deployment tools as such, but this doesn't seem to be a problem.">N/A</span>
<span class="tg20 u">Pylons</span><br/>
</td>
<td>
<span title="">Email</span><br/>
<span class="tg10 tg11 tg20 g"><a href="http://www.topfloor.ca/turbomail/documentation/reference/">TurboMail</a></span><br/>
<span title="">RSS Feeds</span><br/>
<br/>
<span title="">Scheduler</span><br/>
<br/>
<span title="">Web Services</span><br/>
<br/>
</td>
</tr>
</table>

<p><table>
<tr><td class="g">Green</td><td>No major issues; production ready.</td></tr>
<tr><td class="a">Amber</td><td>Some issues; usable.</td></tr>
<tr><td class="r">Red</td><td>Significant issues; may not be usable.</td></tr>
<tr><td class="u">Grey</td><td>Unknown</td></tr>
</table></p>

<p class="tg10">
[1] SQLAlchemy/Elixir can be used as an alternative<br/>
[2] Several alternative template engines can be used<br/>
[3] ToscaWidgets and ToscaWidgetsForms can be used instead.<br/>
[4] Other JavaScript libraries can be used, although some widgets depend on MochiKit<br/>
[7] Paginate is arguably a helper function, and <a href="http://pylonshq.com/WebHelpers/">webhelpers</a> can be used.<br/>
</p>

<p class="tg11">
[1] SQLObject can be used as an alternative<br/>
[2] Several alternative template engines can be used, some requiring a specific integration package, e.g. TurboKid<br/>
[3] ToscaWidgets and ToscaWidgetsForms can be used instead.<br/>
[4] Other JavaScript libraries can be used, although some widgets depend on MochiKit<br/>
[7] Paginate is arguably a helper function, and <a href="http://pylonshq.com/WebHelpers/">webhelpers</a> can be used.<br/>
</p>

<p class="tg20">
[1] SQLObject can be used as an alternative<br/>
[2] Several alternative template engines can be used, some requiring a specific integration package, e.g. TurboKid<br/>
[3] TG Widgets will be available as an alternative.<br/>
[4] Other JavaScript libraries can be used, although some widgets depend on MochiKit<br/>
[5] Routes can also be used.<br/>
[6] CherryPy 3 can also be used.<br/>
[7] Paginate is arguably a helper function, and <a href="http://pylonshq.com/WebHelpers/">webhelpers</a> can be used.<br/>
</p>


<script>
function paj(find, set)
{
    x = document.getElementsByTagName('p')
    for(i = 0; i &lt; x.length; i++)
        if(x[i].className.indexOf(find) > -1)
            x[i].style.display = set

    x = document.getElementsByTagName('span')
    for(i = 0; i &lt; x.length; i++)
        if(x[i].className.indexOf(find) > -1)
            x[i].style.display = set

}
paj('tg10', 'none')
paj('tg11', 'none')
paj('tg20', 'none')
</script>

<p>The colour takes some consideration of the importance of the component in the framework, e.g. FastData could be red, but because it's non-critical is only amber. The colour does not consider functionality, e.g. deployment is green because although we're missing potential functionality, generally people seem to be able to deploy TG apps ok.</p>

</body>
</pipp>
